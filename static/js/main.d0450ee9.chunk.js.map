{"version":3,"sources":["App.module.css","layout/Navigation.js","context/reducer.js","context/actions.js","context/Context.js","layout/DisplayMap.js","hooks/useForm.js","AirportByRadius/ByRadiusHome.js","AirportByName/ByNameHome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","links","name","icon","path","useStyles","makeStyles","theme","root","display","height","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","Navigation","children","classes","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","MenuList","map","link","MenuItem","button","component","Link","to","key","color","getIconHandler","Box","fontSize","ml","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","open","onClose","paper","xsDown","reducer","state","action","type","initialLat","payload","lat","initialLng","lng","updateLocation","data","Context","createContext","initialState","Provider","useReducer","location","dispatch","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","value","DisplayMap","airportData","useContext","showCity","city","setCity","markers","airport","airportId","marker","filter","curr","markerDataHandler","googleMapsApiKey","loadingElement","id","mapContainerClassName","zoom","center","useForm","initialValue","setValue","e","target","inputBox","margin","textField","ByRadiusHome","setAirportData","radius","radiusHandler","fetchAirports","a","fetch","res","json","align","justifyContent","alignItems","FormControl","clsx","Input","onChange","endAdornment","InputAdornment","FormHelperText","Button","length","ByNameHome","nameHandler","App","styles","basename","exact","Boolean","window","hostname","match","createMuiTheme","palette","primary","teal","drawerWidth","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0450ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2KGkq\"};","import React from 'react';\r\nimport {\r\n    AppBar,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Hidden,\r\n    IconButton,\r\n    Toolbar,\r\n    Typography,\r\n    MenuList,\r\n    MenuItem,\r\n    Box\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link  } from 'react-router-dom';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst links = [{\r\n    name: 'ByRadius',\r\n    icon: 'AppsIcon',\r\n    path: 'airport-finder/'\r\n  },\r\n  {\r\n    name: 'ByName',\r\n    icon: 'SubjectIcon',\r\n    path: 'airport-finder/byname'\r\n  }];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n      height: theme.appBar.height,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Navigation = ({children}) => {\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const getIconHandler = icon => {\r\n    switch(icon){\r\n        case 'ByRadius':\r\n          return(<AppsIcon color=\"primary\" />)\r\n        case 'ByName':\r\n          return (<SubjectIcon color=\"primary\" />)\r\n        default: \r\n          return (<AppsIcon color=\"primary\" />)\r\n    }\r\n}\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <MenuList>\r\n        {links.map(link => (\r\n          <MenuItem button component={Link} to={link.path} key={link.name}>\r\n            {getIconHandler(link.name)} \r\n            <Box fontSize={16} ml={1}>{link.name}</Box>{}\r\n          </MenuItem>\r\n        ))}\r\n      </MenuList>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline>\r\n        <AppBar \r\n          position=\"fixed\" \r\n          className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Airport Finder\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {children}\r\n        </main>\r\n      </CssBaseline>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Navigation;\r\n","const reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'INITIAL':\r\n            return {\r\n                ...state,\r\n                initialLat: action.payload.lat,\r\n                initialLng: action.payload.lng\r\n            }\r\n        case 'UPDATE':\r\n            return {\r\n                ...state,\r\n                lat: action.payload.lat,\r\n                lng: action.payload.lng\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export const setInitial = (data) => {\r\n    return {\r\n        type: 'INITIAL',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const updateLocation = (data) => {\r\n    return {\r\n        type: 'UPDATE',\r\n        payload: data\r\n    }\r\n}\r\n\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport reducer from './reducer';\r\nimport { updateLocation, setInitial } from './actions';\r\n\r\nexport const Context = createContext();\r\nconst initialState = {\r\n  initialLat: null,\r\n  initialLng: null,\r\n  lat: null,\r\n  lng: null\r\n}\r\n\r\nconst Provider = ({children}) => {\r\n    const [location, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        if(navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition(pos=>{\r\n            dispatch(updateLocation({\r\n              lat: pos.coords.latitude, \r\n              lng: pos.coords.longitude}\r\n              ))\r\n            dispatch(setInitial({\r\n              lat: pos.coords.latitude, \r\n              lng: pos.coords.longitude}\r\n            ))\r\n          })\r\n        }\r\n      }, [])\r\n\r\n    return (\r\n        <Context.Provider value={{location, dispatch}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Provider;","import React, { useState, useContext } from 'react';\r\nimport { Context } from './../context/Context';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { \r\n    GoogleMap, \r\n    LoadScript, \r\n    Marker\r\n} from '@react-google-maps/api';\r\nimport { updateLocation } from './../context/actions';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n    },\r\n    map: {\r\n        height: `calc(70vh - ${theme.appBar.height}px)`,\r\n    }\r\n}));\r\n\r\nconst DisplayMap = ({ airportData }) => {\r\n    const { location, dispatch } = useContext(Context);\r\n    const classes = useStyles();\r\n    const [ city, setCity ] = useState({\r\n        name: null,\r\n        showCity: false\r\n    });\r\n\r\n    const markerDataHandler = (marker) => {\r\n        const airport = airportData.filter(curr => {\r\n            return curr.airportId === marker.airportId\r\n        })\r\n        setCity({\r\n            name: airport[0].name,\r\n            showCity: true\r\n        })\r\n\r\n        dispatch(updateLocation({lat: marker.location.latitude, lng: marker.location.longitude}));\r\n    }\r\n\r\n    const markers = airportData.map(airport => {\r\n        return (<div\r\n            key={airport.airportId}\r\n        >\r\n            <Marker  \r\n                icon = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\r\n                position={{\r\n                    lat: airport.location.latitude,\r\n                    lng: airport.location.longitude\r\n                }}\r\n                onClick={() => markerDataHandler(airport)}\r\n            />\r\n        </div>)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {city.showCity ? <Typography variant=\"h5\" component=\"h5\" >Airport name: {city.name}</Typography> : null}\r\n            <LoadScript\r\n                googleMapsApiKey=\"AIzaSyAjHlJRY2IR6u30PkgroKuhzJ5lEkyT0qU\"\r\n                loadingElement={<div>Loading...</div>}\r\n            >\r\n                <GoogleMap\r\n                    id=\"circle-example\"\r\n                    mapContainerClassName={classes.map}\r\n                    zoom={10}\r\n                    center={{\r\n                        lat: location.lat,\r\n                        lng: location.lng\r\n                    }}\r\n                >\r\n                {markers}\r\n                <Marker     \r\n                    position={{\r\n                        lat: location.initialLat,\r\n                        lng: location.initialLng\r\n                    }}             \r\n                >\r\n\r\n                </Marker>\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayMap;","import {useState} from 'react';\r\n\r\nexport const useForm = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue);\r\n    \r\n    return [\r\n        value,\r\n        e => setValue(e.target.value)\r\n    ]\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Context } from './../context/Context';\r\nimport DisplayMap from './../layout/DisplayMap';\r\nimport { useForm } from './../hooks/useForm';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputAdornment,\r\n  Input,\r\n  FormHelperText, \r\n  Button\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: `calc(30vh - ${theme.appBar.height}px)`,\r\n  },\r\n  inputBox: {\r\n\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst ByRadiusHome = () => {\r\n    const classes = useStyles();\r\n    const [airportData, setAirportData] = useState([]);\r\n    const { location } = useContext(Context);\r\n    const [radius, radiusHandler] = useForm('');\r\n\r\n    \r\n      // Fetch airport JSON\r\n      const fetchAirports = async() => {\r\n        const res = await fetch(`https://cometari-airportsfinder-v1.p.rapidapi.com/api/airports/by-radius?radius=${radius}&lng=${location.lng}&lat=${location.lat}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"cometari-airportsfinder-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"53205daddemsh34fc06c1c791bf0p142a44jsn13f8d34be766\"\r\n            }\r\n        })\r\n        const data = await res.json()\r\n        setAirportData(data);\r\n      }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"h4\"\r\n            align=\"center\"\r\n          >\r\n            Find a nearby airport:\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl className={clsx(classes.margin, classes.textField)}>\r\n            <Input\r\n              type=\"number\"\r\n              value={radius}\r\n              onChange={radiusHandler}\r\n              endAdornment={<InputAdornment position=\"end\">km</InputAdornment>}\r\n            />\r\n            <FormHelperText>Radius</FormHelperText>\r\n          </FormControl>\r\n          <Button \r\n            className={clsx(classes.margin )}\r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            onClick={()=> fetchAirports()}\r\n          >\r\n            Find \r\n          </Button>\r\n          </Box>\r\n          <hr />\r\n          {airportData.length > 0 ? <DisplayMap airportData={airportData} /> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ByRadiusHome;","import React, { useContext, useState } from 'react'\r\nimport { Context } from './../context/Context';\r\nimport { useForm } from './../hooks/useForm';\r\nimport DisplayMap from './../layout/DisplayMap';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    Input,\r\n    FormHelperText,\r\n    Button,\r\n\r\n\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      height: `calc(30vh - ${theme.appBar.height}px)`,\r\n    },\r\n    inputBox: {\r\n  \r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n      margin: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nconst ByNameHome = () => {\r\n    const {lat, lng} = useContext(Context);\r\n    const [airportData, setAirportData] = useState([]);\r\n    const classes = useStyles();\r\n    const [ name, nameHandler] = useForm('');\r\n\r\n    const fetchAirports = async() => {\r\n        const res = await fetch(`https://cometari-airportsfinder-v1.p.rapidapi.com/api/airports/by-text?text=${name}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"cometari-airportsfinder-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"53205daddemsh34fc06c1c791bf0p142a44jsn13f8d34be766\"\r\n            }\r\n        })\r\n        const data = await res.json()\r\n        setAirportData(data);\r\n      }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography\r\n                variant=\"h4\"\r\n                component=\"h4\"\r\n                align=\"center\"\r\n            >\r\n                Find airport by city:\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl className={clsx(classes.margin, classes.textField)}>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={nameHandler}\r\n            />\r\n            <FormHelperText>City name</FormHelperText>\r\n          </FormControl>\r\n          <Button \r\n            className={clsx(classes.margin )}\r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            onClick={()=> fetchAirports()}\r\n          >\r\n            Find \r\n          </Button>\r\n          </Box>\r\n          <hr />\r\n          {airportData.length>0 ? <DisplayMap lat={lat} lng={lng} airportData={airportData} /> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ByNameHome;","import React from 'react';\nimport Navigation from './layout/Navigation';\nimport ByRadiusHome from './AirportByRadius/ByRadiusHome';\nimport ByNameHome from './AirportByName/ByNameHome';\nimport styles from './App.module.css';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Provider from './context/Context';\n\nconst App = () => {\n  return (\n    <div className={styles.App}>\n      <Provider>\n        <Router basename=\"airport-finder/\">\n            <Navigation>\n              <Switch>\n                  <Route \n                    exact\n                    path=\"airport-finder/\" \n                    component={ByRadiusHome}\n                  />\n                  <Route \n                    exact\n                    path=\"airport-finder/byname\" \n                    component={ByNameHome}\n                  />\n              </Switch>\n            </Navigation>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport { teal } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal\n  },\n  appBar: {\n    height: 65\n  },\n  drawerWidth: 340\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}